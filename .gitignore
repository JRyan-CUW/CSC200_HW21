import java.util.Random;

public class Driver 
{
	public static void main(String[] args)
	{
		Integer[] arrayOfNumbers = new Integer[10];
		Driver.fillArrayWithRandomInts(arrayOfNumbers);
		Driver.printIntArray(arrayOfNumbers);
		Driver.mergeSort1(arrayOfNumbers);
		Driver.printIntArray(arrayOfNumbers);
	}

	static void mergeSort1(Comparable [] ar)
	{
		Comparable[] temp = new Comparable[ar.length];
		Driver.mergeSort0(ar, temp,  0,  ar.length - 1);
	}


	static void mergeSort0(Comparable [] a, Comparable [] temp, int leftBegin, int rightEnd)
	{
		if( leftBegin < rightEnd )
		{
			int center = (leftBegin + rightEnd) / 2;
			Driver.mergeSort0(a, temp, leftBegin, center);
			Driver.mergeSort0(a, temp, center + 1, rightEnd);
			Driver.merge(a, temp, leftBegin, center + 1, rightEnd);
		}
	}

	static void merge(Comparable[] ar, Comparable[] temp, int left, int right, int rightEnd )
	{
	    int leftEnd = right - 1;
	    int x = left;
	    int num = rightEnd - left + 1;

	    while(left <= leftEnd && right <= rightEnd)
	    {
	        if(ar[left].compareTo(ar[right]) <= 0)
	            temp[x++] = ar[left++];
	        else
	            temp[x++] = ar[right++];
	    }

	    while(left <= leftEnd)  
	    {
	        temp[x++] = ar[left++];
	    }

	    while(right <= rightEnd)  
	    {
	    	temp[x++] = ar[right++];
	    }

	    for(int i = 0; i < num; i++, rightEnd--)
	    {
	            ar[rightEnd] = temp[rightEnd];
	    }
	}
	    
	
	static void fillArrayWithRandomInts(Integer[] ar)
	{
		Random r = new Random();
		for(int i = 0; i < ar.length; i++)
		{
			ar[i] = r.nextInt(101);
		}
	}
	
	static void printIntArray(Integer[] ar)
	{
		for(int i = 0; i < ar.length; i++)
		{
			System.out.print(ar[i] + " ");
		}
		System.out.println();
	}
}
